# Generated by Django 3.2.9 on 2023-11-20 19:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Criado em')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Modificado em')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome')),
                ('email', models.EmailField(error_messages={'unique': 'Usuário com e-mail já existente.'}, max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photo_perfil', verbose_name='Foto')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnail_perfil', verbose_name='perfil thumbnail')),
                ('type', models.CharField(choices=[('admin', 'Administrador(a)'), ('businessperson', 'Empresario(a)'), ('employee', 'Funcionario(a)')], default='employee', max_length=20)),
                ('is_staff', models.BooleanField(default=False, help_text='Indica que usuário consegue acessar este site de administração.', verbose_name='Acesso ao Dashboard?')),
                ('is_active', models.BooleanField(default=True, help_text='Indica que o usuário será tratado como ativo. Ao invés de excluir contas de usuário, desmarque isso.', verbose_name='Ativo?')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Registro')),
                ('agent', models.CharField(blank=True, max_length=250, null=True, verbose_name='Dispositivo')),
                ('access_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='access_group_user', to='auth.group', verbose_name='grupo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'permissions': (('app_clients', 'Gerenciar Clientes'), ('app_clients_view', 'Visualizar Clientes'), ('app_products', 'Gerenciar produtos'), ('app_products_view', 'Visualizar produtos'), ('app_stock', 'Gerenciar estoque'), ('app_stock_view', 'Visualizar estoque'), ('app_category_product', 'Gerenciar Categoria de Produto'), ('app_category_product_view', 'Visualizar Categoria de Produto'), ('app_sales', 'Gerenciar vendas'), ('app_sales_view', 'Visualizar vendas'), ('app_sales_edit', 'Editar vendas'), ('app_sales_cancel', 'Cancelar vendas'), ('app_bills_receive', 'Gerenciar Contas a receber'), ('app_bills_receive_view', 'Visualizar  Contas a receber'), ('app_bills_pay', 'Gerenciar  Contas a pagar'), ('app_bills_pay_view', 'Visualizar  Contas a pagar'), ('app_financial_movements', 'Gerenciar movimentações'), ('settings_admin', 'Configurações do Administrador'), ('dashboard_sales', 'Visualizar Painel de Vendas')),
            },
        ),
        migrations.CreateModel(
            name='HistoryLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('company_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ip', models.GenericIPAddressField()),
                ('agent', models.CharField(max_length=500)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Criado em')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico de Login',
                'verbose_name_plural': 'Históricos de Login',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Administradores',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='Businessperson',
            fields=[
            ],
            options={
                'verbose_name': 'Empresário',
                'verbose_name_plural': 'Empresários',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='Collaborator',
            fields=[
            ],
            options={
                'verbose_name': 'Funcionario',
                'verbose_name_plural': 'Funcionarios',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
    ]
